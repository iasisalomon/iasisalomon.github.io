---
// Define any props or imports here if needed
---

// Get the current path on the server side
const currentPath = Astro.url.pathname;

// Determine initial visibility states
const showSectionNav = currentPath === '/' || currentPath === '';
const showBlogNav = currentPath.startsWith('/blog');
const showDivider = showSectionNav || showBlogNav;

// Add these classes to control initial visibility
const sectionNavClass = `navbar-nav section-nav ${!showSectionNav ? 'hidden' : ''}`;
const blogNavClass = `navbar-nav section-nav ${!showBlogNav ? 'hidden' : ''}`;
const dividerClass = `nav-divider d-none d-lg-block ${!showDivider ? 'hidden' : ''}`;

<nav class="navbar navbar-expand-lg navbar-dark fixed-top" id="mainNav">
  <div class="container">
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarNav"
    >
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
      <!-- Primary navigation - main site pages -->
      <ul class="navbar-nav primary-nav">
        <li class="nav-item">
          <a class="nav-link" href="/">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/blog">Blog</a>
        </li>
      </ul>
      
      <!-- Section navigation divider -->
      <div class={dividerClass} id="navDivider"></div>
      
      <!-- Section navigation - homepage sections -->
      <ul class={sectionNavClass} id="sectionNav">
        <li class="nav-item">
          <a class="nav-link" href="#about">About</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#brands">Brands</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#projects">Projects</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#discussion">Contact</a>
        </li>
      </ul>
      
      <!-- Blog categories navigation -->
      <ul class={blogNavClass} id="blogNav">
        <li class="nav-item">
          <a class="nav-link" href="#">Tech</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Business</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Other</a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<style>
  #mainNav {
    background-color: rgba(28, 31, 35, 0.98);
    padding: 0.6rem 0;
    transition: all 0.3s ease;
    z-index: 1030;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  /* Primary navigation styling */
  .primary-nav {
    margin-right: 1rem;
  }
  
  .primary-nav .nav-item {
    margin: 0 0.25rem;
  }
  
  .primary-nav .nav-link {
    padding: 0.5rem 1rem;
    font-weight: 600;
    font-size: 0.95rem;
    color: rgba(255, 255, 255, 0.95);
    position: relative;
    letter-spacing: 0.2px;
    transition: all 0.3s ease;
    border-radius: 4px;
  }
  
  .primary-nav .nav-link:hover {
    color: #fff;
    background-color: rgba(255, 255, 255, 0.1);
  }
  
  .primary-nav .nav-link.active {
    color: #fff;
    background-color: rgba(255, 255, 255, 0.15);
  }
  
  /* Divider between primary and section nav */
  .nav-divider {
    width: 1px;
    height: 24px;
    background-color: rgba(255, 255, 255, 0.2);
    margin: 0 1rem;
  }
  
  /* Section navigation styling */
  .section-nav .nav-item {
    margin: 0 0.1rem;
  }
  
  .section-nav .nav-link {
    padding: 0.45rem 0.75rem;
    font-weight: 400;
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.7);
    position: relative;
    transition: all 0.3s ease;
    border-radius: 3px;
  }
  
  .section-nav .nav-link::after {
    content: '';
    position: absolute;
    bottom: 6px;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #4d9aff;
    transform: scaleX(0);
    transform-origin: center;
    transition: transform 0.3s ease;
  }
  
  .section-nav .nav-link:hover {
    color: rgba(255, 255, 255, 0.95);
  }
  
  .section-nav .nav-link.active {
    color: #4d9aff;
    background-color: rgba(77, 154, 255, 0.08);
  }
  
  .section-nav .nav-link:hover::after,
  .section-nav .nav-link.active::after {
    transform: scaleX(0.8);
  }
  
  .navbar-toggler {
    border: none;
    background-color: rgba(255, 255, 255, 0.08);
    padding: 0.4rem 0.6rem;
    font-size: 0.9rem;
    transition: all 0.2s ease;
    margin: 0 auto;
  }
  
  .navbar-toggler:hover {
    background-color: rgba(255, 255, 255, 0.15);
  }
  
  .navbar-toggler:focus {
    box-shadow: none;
  }
  
  @media (max-width: 992px) {
    #mainNav {
      padding: 0.5rem 0;
    }
    
    .navbar-nav {
      padding: 0.5rem 0;
      text-align: center;
    }
    
    .navbar-nav .nav-item {
      margin: 0;
    }
    
    .primary-nav {
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      margin-right: 0;
      padding-bottom: 0.5rem;
      margin-bottom: 0.5rem;
    }
    
    .primary-nav .nav-link,
    .section-nav .nav-link {
      padding: 0.6rem 1rem;
      border-radius: 4px;
    }
    
    .primary-nav .nav-link.active {
      background-color: rgba(255, 255, 255, 0.15);
    }
    
    .section-nav .nav-link {
      font-size: 0.85rem;
      color: rgba(255, 255, 255, 0.7);
    }
    
    .section-nav .nav-link.active {
      color: #4d9aff;
      background-color: rgba(77, 154, 255, 0.08);
    }
    
    .section-nav .nav-link::after {
      display: none;
    }
    
    .navbar-toggler {
      margin: 0;
    }
  }
  
  /* Add this new style for hidden elements */
  .hidden {
    display: none !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const sectionNav = document.getElementById('sectionNav');
    const blogNav = document.getElementById('blogNav');
    const navDivider = document.getElementById('navDivider');
    
    // Show appropriate navigation based on current page
    if (currentPath === '/' || currentPath === '') {
      // On homepage, show section nav and hide blog nav
      if (blogNav) blogNav.style.display = 'none';
      if (sectionNav) sectionNav.style.display = 'flex';
      if (navDivider) navDivider.style.display = 'block';
    } 
    else if (currentPath.startsWith('/blog')) {
      // On blog page, show blog nav and hide section nav
      if (sectionNav) sectionNav.style.display = 'none';
      if (blogNav) blogNav.style.display = 'flex';
      if (navDivider) navDivider.style.display = 'block';
      
      // Set active state for blog category links
      const blogLinks = document.querySelectorAll('#blogNav .nav-link');
      blogLinks.forEach(link => {
        if (currentPath.includes(link.getAttribute('href'))) {
          link.classList.add('active');
        }
      });
    } 
    else {
      // On other pages, hide both navs
      if (sectionNav) sectionNav.style.display = 'none';
      if (blogNav) blogNav.style.display = 'none';
      if (navDivider) navDivider.style.display = 'none';
    }
    
    // Active state for main links
    const mainLinks = document.querySelectorAll('.primary-nav .nav-link');
    
    mainLinks.forEach(link => {
      const href = link.getAttribute('href');
      
      // Check if it's the homepage
      if (href === '/' && (currentPath === '/' || currentPath === '')) {
        link.classList.add('active');
      } 
      // Check if it's the blog or other subpages
      else if (href !== '/' && currentPath.startsWith(href)) {
        link.classList.add('active');
      }
    });
    
    // Only run section navigation logic on homepage
    if (currentPath === '/' || currentPath === '') {
      // Get all section navigation links
      const sectionLinks = document.querySelectorAll('#sectionNav .nav-link');
      
      // Track active section
      let activeSection = 'about'; // Default to about
      
      // Add active class based on current active section
      function setActiveSectionItem(sectionId) {
        activeSection = sectionId.replace('#', '');
        
        sectionLinks.forEach(link => {
          if (link.getAttribute('href') === sectionId) {
            link.classList.add('active');
          } else {
            link.classList.remove('active');
          }
        });
      }
      
      // Handle smooth scrolling
      sectionLinks.forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Get the section ID from the href attribute
          const sectionId = this.getAttribute('href');
          const section = document.querySelector(sectionId);
          
          if (section) {
            // Add active class to clicked nav item
            setActiveSectionItem(sectionId);
            
            // Get navbar height for proper offset
            const navbarHeight = document.querySelector('#mainNav').offsetHeight;
            
            // Smoothly scroll to the section
            const sectionTop = section.offsetTop;
            
            window.scrollTo({
              top: sectionTop - navbarHeight - 10, // 10px extra padding
              behavior: 'smooth'
            });
            
            // Close mobile menu when a link is clicked
            const navbarCollapse = document.getElementById('navbarNav');
            if (navbarCollapse.classList.contains('show')) {
              document.querySelector('.navbar-toggler').click();
            }
          }
        });
      });
      
      // Update active section when user scrolls
      window.addEventListener('scroll', function() {
        // Add a small delay to avoid excessive calculation during scroll
        if (!window.scrollTimeout) {
          window.scrollTimeout = setTimeout(function() {
            const scrollPosition = window.scrollY;
            
            // Get navbar height for offset calculations
            const navbarHeight = document.querySelector('#mainNav').offsetHeight;
            const totalOffset = navbarHeight + 20; // 20px tolerance
            
            // Find the current visible section
            let currentSection = null;
            
            document.querySelectorAll('section[id]').forEach(section => {
              const sectionTop = section.offsetTop - totalOffset;
              const sectionBottom = sectionTop + section.offsetHeight;
              
              if (scrollPosition >= sectionTop && scrollPosition < sectionBottom) {
                currentSection = '#' + section.id;
              }
            });
            
            // If found a visible section, update active section nav
            if (currentSection && '#' + activeSection !== currentSection) {
              setActiveSectionItem(currentSection);
            }
            
            window.scrollTimeout = null;
          }, 100);
        }
      });
      
      // Initial scroll to correct section if page is reloaded with hash
      if (window.location.hash) {
        const targetSection = document.querySelector(window.location.hash);
        if (targetSection) {
          // Remove the hash from URL to avoid navigation issues
          history.replaceState('', document.title, window.location.pathname);
          
          setTimeout(() => {
            const navbarHeight = document.querySelector('#mainNav').offsetHeight;
            const sectionTop = targetSection.offsetTop;
            
            window.scrollTo({
              top: sectionTop - navbarHeight - 10,
              behavior: 'smooth'
            });
            
            setActiveSectionItem('#' + targetSection.id);
          }, 300); // Small delay to ensure DOM is fully loaded
        }
      }
    }
  });
</script> 